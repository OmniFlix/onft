syntax = "proto3";
package OmniFlix.onft.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "onft/v1beta1/onft.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/OmniFlix/onft/types";

service Query {
  rpc Collection(QueryCollectionRequest) returns (QueryCollectionResponse) {
    option (google.api.http).get = "/omniflix/onft/v1beta1/collections/{denom_id}";
  }

  rpc Denom(QueryDenomRequest) returns (QueryDenomResponse) {
    option (google.api.http).get = "/omniflix/onft/v1beta1/denoms/{denom_id}";
  }

  rpc Denoms(QueryDenomsRequest) returns (QueryDenomsResponse) {
    option (google.api.http).get = "/omniflix/onft/v1beta1/denoms";
  }
  rpc ONFT(QueryONFTRequest) returns (QueryONFTResponse) {
    option (google.api.http).get = "/omniflix/onft/v1beta1/denoms/{denom_id}/onfts/{id}";
  }
  rpc OwnerONFTs(QueryOwnerONFTsRequest) returns (QueryOwnerONFTsResponse) {
    option (google.api.http).get = "/omniflix/onft/v1beta1/onfts/{denom_id}/{owner}";
  }
  rpc Supply(QuerySupplyRequest) returns (QuerySupplyResponse) {
    option (google.api.http).get = "/omniflix/onft/v1beta1/denoms/{denom_id}/supply";
  }
}

message QueryCollectionRequest {
  string                                denom_id   = 1 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryCollectionResponse {
  Collection                             collection = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryDenomRequest {
  string denom_id = 1 [(gogoproto.moretags) = "yaml:\"denom_id\""];
}

message QueryDenomResponse {
  Denom denom = 1;
}

message QueryDenomsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryDenomsResponse {
  repeated Denom                         denoms     = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryONFTRequest {
  string denom_id = 1 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  string id       = 2;
}

message QueryONFTResponse {
  ONFT onft = 1 [(gogoproto.customname) = "ONFT"];
}


message QueryOwnerONFTsRequest {
  string                                denom_id   = 1 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  string                                owner      = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryOwnerONFTsResponse {
  Owner                                  owner      = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QuerySupplyRequest {
  string denom_id = 1 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  string owner    = 2;
}

message QuerySupplyResponse {
  uint64 amount = 1;
}
