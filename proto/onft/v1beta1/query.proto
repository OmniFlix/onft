syntax = "proto3";
package OmniFlix.onft.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "onft/v1beta1/onft.proto";

option go_package = "github.com/OmniFlix/onft/types";

service Query {
    rpc Collection(QueryCollectionRequest) returns (QueryCollectionResponse) {
      option (google.api.http).get = "/omniflix/onft/v1beta1/collections/{denom}";
    }

    rpc Denom(QueryDenomRequest) returns (QueryDenomResponse) {
      option (google.api.http).get = "/omniflix/onft/v1beta1/denoms/{denom}";
    }

    rpc Denoms(QueryDenomsRequest) returns (QueryDenomsResponse) {
      option (google.api.http).get = "/omniflix/onft/v1beta1/denoms";
    }
    rpc ONFT(QueryONFTRequest) returns (QueryONFTResponse) {
      option (google.api.http).get = "/omniflix/onft/v1beta1/denoms/{denom}/onfts/{id}";
    }
    rpc OwnerONFTs(QueryOwnerONFTsRequest) returns (QueryOwnerONFTsResponse) {
      option (google.api.http).get = "/omniflix/onft/v1beta1/onfts/{denom}/{owner}";
    }
    rpc Supply(QuerySupplyRequest) returns (QuerySupplyResponse) {
        option (google.api.http).get = "/omniflix/onft/v1beta1/denoms/{denom}/supply";
    }
}

message QueryCollectionRequest {
    string denom = 1;
}

message QueryCollectionResponse {
    Collection collection = 1;
}

message QueryDenomRequest {
    string denom = 1;
}

message QueryDenomResponse {
    Denom denom = 1;
}

message QueryDenomsRequest {}

message QueryDenomsResponse {
    repeated Denom denoms = 1 [(gogoproto.nullable) = false];
}

message QueryONFTRequest {
    string denom = 1;
    string id = 2;
}

message QueryONFTResponse {
    ONFT onft = 1 [(gogoproto.customname) = "ONFT"];
}


message QueryOwnerONFTsRequest {
    string denom = 1;
    string owner = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message QueryOwnerONFTsResponse {
    repeated ONFT onfts = 1;
}
message QuerySupplyRequest {
    string denom = 1;
    bytes owner = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message QuerySupplyResponse {
    uint64 amount = 1;
}