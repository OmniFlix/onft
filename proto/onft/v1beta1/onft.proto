syntax = "proto3";
package OmniFlix.onft.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/OmniFlix/onft/types";
option (gogoproto.goproto_getters_all) = false;

//ASSETS or collections
message Collection {
    option (gogoproto.equal) = true;

    Denom denom = 1 [ (gogoproto.nullable) = false ];
    repeated ONFT onfts = 2 [(gogoproto.customname) = "ONFTs", (gogoproto.nullable) = false];
}

message IDCollection {
    string denom = 1;
    repeated string ids = 2;
}

message Denom {
    option (gogoproto.equal) = true;

    string id = 1;
    string symbol = 2;
    string name = 3;
    string schema = 4;
    bytes creator = 5 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

//ASSET or ONFT
message ONFT {
    option (gogoproto.equal) = true;

    string id                           = 1;
    Metadata metadata                   = 2 [ (gogoproto.nullable) = false ];
    bytes owner                         = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    AssetType type                      = 4;
    bool transfer_enabled               = 5;
    google.protobuf.Timestamp created   = 6 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true, (gogoproto.moretags) = "yaml:\"created\""];
}


enum AssetType {
    option (gogoproto.goproto_enum_prefix)  = false;

    ARTWORK      = 0;
    AUDIO        = 1;
    VIDEO        = 2;
}

message Metadata {
    option (gogoproto.equal) = true;

    string name                         = 1;
    string description                  = 2;
    string preview                      = 3;
    string media                        = 4;
}

